# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
            - tên: Tải lên một hiện vật xây dựng
  sử dụng: actions/upload-artifact@v4.6.2
  với:
    # Tên hiện vật
    tên: # tùy chọn, mặc định là hiện vật
    # Một tệp, thư mục hoặc mẫu ký tự đại diện mô tả những gì cần tải lên
    con đường:
    # Hành vi mong muốn nếu không tìm thấy tệp nào sử dụng đường dẫn được cung cấp.
Các tùy chọn có sẵn:
  cảnh báo: Đưa ra cảnh báo nhưng không làm hỏng hành động
  lỗi: Không thực hiện được hành động với thông báo lỗi
  bỏ qua: Không đưa ra bất kỳ cảnh báo hoặc lỗi nào, hành động không thất bại

    # Thời gian mà hiện vật sẽ hết hạn tính bằng ngày. nghĩa là sử dụng chế độ lưu giữ mặc định : 90 ngày.
     ngày lưu giữ: # tùy chọn ( Tối thiểu 1 ngày. Tối đa 90 ngày trừ khi có thay đổi từ trang cài đặt kho lưu trữ.)
     
    # Mức độ nén của Zlib sẽ được áp dụng cho kho lưu trữ hiện vật. Giá trị có thể dao động từ 0 đến 9: - 0: Không nén - 1: Tốc độ tốt nhất - 6: Nén mặc định (tương tự GNU Gzip) - 9: Nén tốt nhất. Mức độ cao hơn sẽ cho kết quả nén tốt hơn, nhưng sẽ mất nhiều thời gian hơn để hoàn tất. Đối với các tệp lớn không dễ nén, nên đặt giá trị 0 để tải lên nhanh hơn đáng kể.

    mức độ nén: # tùy chọn, mặc định là 6
    # Nếu đúng, một hiện vật có tên trùng khớp sẽ bị xóa trước khi tải lên hiện vật mới. Nếu sai, thao tác sẽ thất bại nếu hiện vật cho tên đã cho đã tồn tại. Không thất bại nếu hiện vật không tồn tại.

    ghi đè: # tùy chọn, mặc định là sai
    # Nếu đúng, các tệp ẩn sẽ được đưa vào hiện vật. Nếu sai, các tệp ẩn sẽ bị loại khỏi hiện vật.

    include-hidden-files: # tùy chọn, mặc định là false            
  
    - tên: Cài đặt Java JDK
  sử dụng: actions/setup-java@v5.0.0
  với:
    # Phiên bản Java cần thiết lập. Cần có phiên bản Java đầy đủ hoặc phiên bản Java semver. Xem ví dụ về cú pháp được hỗ trợ trong tệp README
    java-version: # tùy chọn
    # Đường dẫn đến tệp `.java-version`. Xem ví dụ về cú pháp được hỗ trợ trong tệp README
    java-version-file: # tùy chọn
    # Bản phân phối Java. Xem danh sách các bản phân phối được hỗ trợ trong tệp README
    phân bổ:
    # Loại gói (jdk, jre, jdk+fx, jre+fx)
    java-package: # tùy chọn, mặc định là jdk
    # Kiến trúc của gói (mặc định là kiến trúc của trình chạy hành động)
    kiến trúc: # tùy chọn
    # Đường dẫn đến nơi chứa JDK đã nén
    jdkFile: # tùy chọn
    # Đặt tùy chọn này nếu bạn muốn hành động kiểm tra phiên bản mới nhất có sẵn đáp ứng thông số kỹ thuật phiên bản
    check-latest: # tùy chọn
    # ID của kho lưu trữ distributionManagement trong tệp pom.xml. Mặc định là `github`
    server-id: # tùy chọn, mặc định là github
    # Tên biến môi trường cho tên người dùng để xác thực với kho lưu trữ Apache Maven. Mặc định là $GITHUB_ACTOR
    server-username: # tùy chọn, mặc định là GITHUB_ACTOR
    # Tên biến môi trường cho mật khẩu hoặc mã thông báo để xác thực vào kho lưu trữ Apache Maven. Mặc định là $GITHUB_TOKEN
    server-password: # tùy chọn, mặc định là GITHUB_TOKEN
    # Đường dẫn đến nơi tệp settings.xml sẽ được ghi. Mặc định là ~/.m2.
    đường dẫn cài đặt: # tùy chọn
    # Ghi đè lên tệp settings.xml nếu nó tồn tại. Mặc định là "true".
    overwrite-settings: # tùy chọn, mặc định là đúng
    # Khóa riêng GPG cần nhập. Mặc định là chuỗi trống.
    gpg-private-key: # tùy chọn
    # Tên biến môi trường cho mật khẩu khóa riêng GPG. Mặc định là $GPG_PASSPHRASE.
    gpg-passphrase: # tùy chọn
    # Tên của nền tảng xây dựng để lưu trữ các phụ thuộc. Có thể là "maven", "gradle" hoặc "sbt".
    bộ nhớ đệm: # tùy chọn
    # Đường dẫn đến tệp phụ thuộc: pom.xml, build.gradle, build.sbt, v.v. Tùy chọn này có thể được sử dụng với tùy chọn `cache`. Nếu tùy chọn này bị bỏ qua, hành động sẽ tìm kiếm tệp phụ thuộc trong toàn bộ kho lưu trữ. Tùy chọn này hỗ trợ ký tự đại diện và danh sách tên tệp để lưu trữ đệm nhiều phụ thuộc.
    cache-dependency-path: # tùy chọn
    # Giải pháp thay thế để chuyển trạng thái công việc sang bước đăng công việc. Biến này không dành cho việc thiết lập thủ công.
    job-status: # tùy chọn, mặc định là ${{ job.status }}
    # Mã thông báo được sử dụng để xác thực khi tải xuống các bản kê khai phiên bản được lưu trữ trên github.com, chẳng hạn như đối với bản dựng OpenJDK của Microsoft. Khi chạy hành động này trên github.com, giá trị mặc định là đủ. Khi chạy trên GHES, bạn có thể truyền mã thông báo truy cập cá nhân cho github.com nếu gặp phải giới hạn tốc độ.
    token: # tùy chọn, mặc định là ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Tên của ID Maven Toolchain nếu tên mặc định "${distribution}_${java-version}" không được mong muốn. Xem ví dụ về cú pháp được hỗ trợ trong tệp Sử dụng Nâng cao
    mvn-toolchain-id: # tùy chọn
    # Tên của Nhà cung cấp Maven Toolchain nếu không muốn sử dụng tên mặc định "${distribution}". Xem ví dụ về cú pháp được hỗ trợ trong tệp Sử dụng Nâng cao
    mvn-toolchain-vendor: # tùy chọn
          
          
